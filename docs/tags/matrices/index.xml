<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matrices on Luca Bruno blog</title>
    <link>https://lucabrun.github.io/tags/matrices/</link>
    <description>Recent content in Matrices on Luca Bruno blog</description>
    <generator>Hugo 0.125.2</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Feb 2011 12:20:00 -0800</lastBuildDate>
    <atom:link href="https://lucabrun.github.io/tags/matrices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Matrix transpose with Prolog</title>
      <link>https://lucabrun.github.io/2011/02/matrix-transpose-with-prolog.html</link>
      <pubDate>Tue, 15 Feb 2011 12:20:00 -0800</pubDate>
      <guid>https://lucabrun.github.io/2011/02/matrix-transpose-with-prolog.html</guid>
      <description>Hello,&#xA;an exam exercise requires me to write a matrix transpose method. I&amp;rsquo;ve written one and it took a little before I was able to define it completely in 4 rules.&#xA;I&amp;rsquo;m curious then I&amp;rsquo;ve found this on stackoverflow: the approach is to calculate first transposed column, then shift by one column and calculate the transpose of that new matrix.&#xA;This was one of the first solutions I&amp;rsquo;ve thought but I haven&amp;rsquo;t realized it because I&amp;rsquo;m too lazy to create a rule for calculating the shifted matrix.</description>
    </item>
  </channel>
</rss>
